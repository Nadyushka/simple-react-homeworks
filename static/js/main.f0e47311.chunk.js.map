{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","avatar","alt","avatarImg","textInfoAndTime","textInfo","textInfoTitle","name","textInfoMessage","textInfoTime","time","messageData","HW1","Affair","onClick","deleteAffairCallback","affair","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","someClass","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","alert","setChecked","column","testSpanError","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.f0e47311.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__36Qpr\",\"avatarImg\":\"Message_avatarImg__1KzWv\",\"textInfoAndTime\":\"Message_textInfoAndTime__1ikwU\",\"textInfo\":\"Message_textInfo__sPJf_\",\"textInfoTitle\":\"Message_textInfoTitle__3Okb5\",\"textInfoMessage\":\"Message_textInfoMessage__3a6jg\",\"textInfoTime\":\"Message_textInfoTime__4nBED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1Fiq0\",\"errorInput\":\"SuperInputText_errorInput__2Lzj-\",\"error\":\"SuperInputText_error__27IqC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2OJpR\",\"column\":\"HW4_column__2sxsp\",\"testSpanError\":\"HW4_testSpanError__1WQJg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2Itps\",\"error\":\"Greeting_error__1YtUn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__V2JFY\",\"red\":\"SuperButton_red__7RA-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2iOqB\",\"spanClassName\":\"SuperCheckbox_spanClassName__26N3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__dA-VC\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ntype MessagePropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <img src={props.avatar} alt='' className={s.avatarImg}/>\r\n            <div className={s.textInfoAndTime}>\r\n                <div className={s.textInfo}>\r\n                    <div className={s.textInfoTitle}>{props.name}</div>\r\n                    <div className={s.textInfoMessage}>{props.message}</div>\r\n                </div>\r\n                <div className={s.textInfoTime}>{props.time}</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\n\r\nexport type AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        return props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div>\r\n            // show some text\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        return props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        return props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        return props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        return props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n// import any = jasmine.any;\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low'  // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): any => { // need to fix any\r\n    if (filter === 'all') {\r\n        return affairs\r\n    } else {\r\n        return affairs.filter(affair => affair.priority === filter)\r\n    }\r\n\r\n}// need to fix\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): any => { // need to fix any\r\n    return affairs.filter(affair => affair._id !== _id)\r\n\r\n    // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, FocusEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n\r\n    let inputClass = error === 'Ошибка! Введите имя' ? s.error: s.someClass; // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n            <div>{error}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState, ChangeEvent, FocusEvent} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('Ошибка! Введите имя') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value) // need to fix\r\n        setError('')\r\n    };\r\n\r\n\r\n    const addUser = () => {\r\n        // alert(`Hello  ${name}!`) // need to fix\r\n        addUserCallback(name)\r\n        setError('Ошибка! Введите имя')\r\n        setName('')\r\n\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid'\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string)=> { // need to fix any\r\n        setUsers([{_id: v1(), name: name}, ...users]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className ? s.superInput:''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        error ? alert('введите текст...') : alert(text);\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n\r\n    const onChangeChecked = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                    onChange={(e) => setChecked(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from '../../../p2-homeworks/h4/HW4'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}